{"version":3,"sources":["Components/Header/Header.js","Components/NewCharity/NewCharity.js","Components/CharityList/CharityList.js","constants.js","Components/ShowCharity/ShowCharity.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","type","Component","NewCharity","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","charity","console","log","placeholder","CharityList","charities","list","map","index","key","org","href","_id","environment","window","location","hostname","CLIENT_URL","ShowCharity","state","_this2","charityId","match","params","id","concat","url","axios","get","then","res","data","catch","err","src","logoUrl","alt","category","mission","donateUrl","App","_this3","Components_Header_Header","Switch","Route","path","component","render","routerProps","Components_ShowCharity_ShowCharity","assign","Components_CharityList_CharityList","Boolean","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.710b5baa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport './Header.css'\n\nclass Header extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <nav className='nav-wrapper'> <h1 className='header-title'>The Giving List</h1>\n          <div className='nav-elements'>\n              <Link to='/giving' type=\"submit\" className='header-link'>Home</Link> <br />\n              <Link to='/giving/neworg' type=\"submit\" className='header-link'>New Organization</Link> \n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react'; \nimport './NewCharity.css'\n\nclass NewCharity extends Component {\n\n  componentDidMount() {\n    console.log('new component did mount')\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.setState = {\n      charity: props.charity\n    }\n  }\n  \n  render() {\n    return (\n      <div className='form-wrapper'>\n        <form className='form'>\n          <input className='input-field' type='text' placeholder='Organization Name' />\n          <input className='input-field' type='text' placeholder=\"Category\" />\n          <input className='input-field' type='text' placeholder=\"Mission Statement\" />\n          <input className='input-field' type='text' placeholder=\"Donation Link\" />\n          <input className='input-field' type='text' placeholder='Organization Logo URL' />\n          <button type='submit'>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewCharity;","import React, { Component } from 'react';\nimport './CharityList.css'\n\nclass CharityList extends Component {\n\n  render() {\n    if(this.props.charities) {\n    let list = this.props.charities.map(index => {\n        return (\n        <div key={index.org}>\n            <ul>\n                <li><a href={\"giving/\" + index._id}>{index.org}</a></li>\n            </ul>\n        </div>\n        )      \n    })\n    return (\n        <div className='charityList'>\n            <h1>Organizations</h1>\n            {list}\n        </div>\n    );}\n}\n}\n\nexport default CharityList;","let environment = \"production\"\n\nif(window.location.hostname === \"localhost\") {\n  environment = \"localhost\"\n}\n\nlet CLIENT_URL = \"\"\n\nif(environment === \"localhost\") {\n  CLIENT_URL = \"http://localhost:3001\"\n} else {\n  CLIENT_URL = \"https://the-giving-list.herokuapp.com/\"\n}\n\nexport { CLIENT_URL }","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './ShowCharity.css'\nimport { CLIENT_URL } from '../../constants'\n\n// const charityUrl = 'http://localhost:3001/giving/'\n\nclass ShowCharity extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      charity: []\n  }\n}\n\n  componentDidMount() {\n    console.log('single component did mount')\n    const charityId = this.props.match.params.id\n    console.log(`${CLIENT_URL}` + /giving/ + `${charityId}`)\n    const url = `${CLIENT_URL}` + /giving/ + `${charityId}`\n\n    axios.get(url)\n      .then((res) => {\n        console.log(res)\n        this.setState({\n          charity: res.data\n        })\n        console.log(this.state.charity)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <div key = {this.state.charity._id} className='charity-card'>\n        <img src={this.state.charity.logoUrl} className='logo' alt=\"\"/>\n        <h1 className='charity-title'>{this.state.charity.org}</h1>\n        <h2>Category</h2><p>{this.state.charity.category}</p>\n        <h2>Mission Statement</h2> <p>{this.state.charity.mission}</p>\n        <h2><a href={this.state.charity.donateUrl} className='link'>Donate Here </a></h2>\n      </div>\n    );\n  }\n}\n\nexport default ShowCharity;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Header from '../src/Components/Header/Header'\nimport NewCharity from './Components/NewCharity/NewCharity'\nimport CharityList from './Components/CharityList/CharityList'\nimport ShowCharity from './Components/ShowCharity/ShowCharity'\nimport './App.css';\nimport axios from 'axios'\nimport { CLIENT_URL } from '../src/constants'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      charities: []\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount\")\n    axios.get(CLIENT_URL)\n      .then((res) => {\n        console.log(res.data)\n        this.setState({\n          charities: res.data\n        })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n        </header>\n        <main>\n        <div className ='charitytList'>\n            <Switch>\n              <Route path='/giving/neworg/' component={NewCharity}/>\n              <Route path='/giving/:id' render={(routerProps)=>< ShowCharity {...routerProps} {...this.state} />} />\n              <Route path='/giving' render={(routerProps)=>< CharityList  {...routerProps} {...this.state} charities={this.state.charities} />}/>\n            </Switch>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport App from '../src/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}